/** ANNReductUTest.cxxtest --- 
 *
 * Copyright (C) 2010 Novamente LLC
 *
 * Author: Nil Geisweiller
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License v3 as
 * published by the Free Software Foundation and including the exceptions
 * at http://opencog.org/wiki/Licenses
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU Affero General Public License
 * along with this program; if not, write to:
 * Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#include <opencog/comboreduct/reduct/reduct.h>
#include <opencog/comboreduct/ant_combo_vocabulary/ant_combo_vocabulary.h>

using namespace std;
using namespace reduct;
using namespace ant_combo;
using namespace opencog;

class ANNReductUTest : public CxxTest::TestSuite {
public:
    void test_simplify1() {
        string tree_str = "ann(#N1(#I7 #N5(#I7(#N5) #I4 #I3 #I2 1.25 -1.25 -3.125 0.3125) #I2 #I3 #I4 -3.125 5.9375 0.625 0 3.125))";
            
        stringstream ss(tree_str);
        combo_tree tr;
        ss >> tr;

        std::cout << "before: " << tr << std::endl;        
        unsigned int size_before=tr.size();
        ann_reduce(tr);
        unsigned int size_after=tr.size();
        std::cout << "after:  " << tr << std::endl;      
        
        TS_ASSERT_LESS_THAN(size_after,size_before);
    }
};
