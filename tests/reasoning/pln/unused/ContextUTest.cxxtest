#include <ContextInfo.h>
#include <Context.h>
#include <TruthValue.h>
#include <FirstPTLTruthValue.h>
#define NL "\n"
#define TAB "\t"
#define CONTEXT_SIZE 5

class ContextUTest : public CxxTest::TestSuite{
    private:
    Context* context1;
    Context* context2;
    Handle handles1[CONTEXT_SIZE];
    ContextInfo* cinfos1[CONTEXT_SIZE];
    Handle handles2[4];
    ContextInfo* cinfos2[4];

    public:
    ContextUTest(){

        handles1[0] = (Handle) 0;
        handles1[1] = (Handle) 1;
        handles1[2] = (Handle) 2;
        handles1[3] = (Handle) 3;
        handles1[4] = (Handle) 4;
        Handle source1 = (Handle) 5;

        cinfos1[0] = new ContextInfo(new FirstPTLTruthValue(0.1, 10), 0.11);
        cinfos1[1] = new ContextInfo(new FirstPTLTruthValue(0.2, 20), 0.22);
        cinfos1[2] = new ContextInfo(new FirstPTLTruthValue(0.3, 30), 0.33);
        cinfos1[3] = new ContextInfo(new FirstPTLTruthValue(0.4, 40), 0.44);
        cinfos1[4] = new ContextInfo(new FirstPTLTruthValue(0.5, 50), 0.55);

        context1 = new Context(handles1,cinfos1,CONTEXT_SIZE,source1);
        cout << NL << "Context1:\n" << context1->toString() << NL;


        handles2[0] = (Handle) 3;
        handles2[1] = (Handle) 4;
        handles2[2] = (Handle) 5;
        handles2[3] = (Handle) 6;
        Handle source2 = (Handle) 7;

        cinfos2[0] = new ContextInfo(new FirstPTLTruthValue(0.5, 50), 0.55);
        cinfos2[1] = new ContextInfo(new FirstPTLTruthValue(0.6, 60), 0.66);
        cinfos2[2] = new ContextInfo(new FirstPTLTruthValue(0.7, 70), 0.77);
        cinfos2[3] = new ContextInfo(new FirstPTLTruthValue(0.8, 80), 0.88);

        context2 = new Context(handles2,cinfos2,4,source2);

        cout << "Context2:\n" << context2->toString() << NL;
    }

    void testMergeContext(){
        cout << NL << "Merge" << NL;
        context1->merge(context2);
        cout << "Merged Context:\n" << context1->toString();
        TS_ASSERT_EQUALS(context1->getSize(),7);
    }

    void testAdd(){
        cout << NL << "Add" << NL;
        int size = context1->getSize();
        cout << "Context1:\n" << context1->toString() << NL;
        context1->add(handles1[0],cinfos2[0]);
        cout << "Context1:\n" << context1->toString() << NL;
        TS_ASSERT_EQUALS(context1->getSize(),size);

        Handle h = (Handle) 10;
        ContextInfo* c = new ContextInfo(new FirstPTLTruthValue(0.666, 666), 0.666);
        context1->add(h,c);
        cout << "Context1:\n" << context1->toString() << NL;
        TS_ASSERT_EQUALS(context1->getSize(),size+1);
    }

    void testGetTruthValue() {
        TruthValue* tv = context1->getTruthValue(handles1[1]);
        TS_ASSERT_EQUALS (tv, cinfos1[1]->getTruthValue());
    }

};
