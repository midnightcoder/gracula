#include <PLN.h>
#include <utils.h>
#include <AtomTableWrapper.h>
#include <formulas/Formulas.h>
#include <XMLNodeLoader.h>

extern opencog::pln::iAtomTableWrapper* defaultAtomTableWrapper;

char* XML_DATA = 
"<ListLink>"
""
"<InheritanceLink strength=\".98\" confidence=\".99\">"
"    <Element name=\"Osama\" class=\"ConceptNode\"/>"
"    <Element name=\"terrorist\" class=\"ConceptNode\"/>"
"</InheritanceLink>  "
""
"<ForAll strength=\".25\" confidence=\".99\">"
"  <ListLink>"
"     <Element name=\"X001\" class=\"VariableNode\"/>"
"     <Element name=\"X002\" class=\"VariableNode\"/>"
"  </ListLink>"
"  <ImplicationLink>"
"            <And>"
"                <InheritanceLink confidence=\"0\">"
"                    <Element name=\"X002\" class=\"VariableNode\"/>"
"                    <Element name=\"terrorist\" class=\"ConceptNode\"/>"
"                </InheritanceLink>"
"                <EvaluationLink confidence=\"0\">"
"                    <Element name=\"friendOf\" class=\"PredicateNode\"/>"
"                    <ListLink>"
"                        <Element name=\"X001\" class=\"VariableNode\"/>"
"                        <Element name=\"X002\" class=\"VariableNode\"/>"
"                    </ListLink>"
"        </EvaluationLink>"
"            </And>"
"    <InheritanceLink confidence=\"0\">"
"        <Element name=\"X001\" class=\"VariableNode\"/>"
"        <Element name=\"terrorist\" class=\"ConceptNode\"/>"
"    </InheritanceLink>"
"  </ImplicationLink>"
"</ForAll>"
""
"<ConceptNode name=\"terrorist\" strength=\"0.01\" confidence=\".999\"></ConceptNode>"
""
"<EvaluationLink strength=\".8\" confidence=\".2\">"
"    <Element name=\"friendOf\" class=\"PredicateNode\"/>"
"<ListLink>"
"    <Element name=\"Britney\" class=\"ConceptNode\"/>"
"    <Element name=\"Osama\" class=\"ConceptNode\"/>"
"</ListLink>"
"</EvaluationLink>"
""
"<ConceptNode name=\"Osama\" strength=\"0.00001\" confidence=\".999\"></ConceptNode>"
"<ConceptNode name=\"Britney\" strength=\"0.00001\" confidence=\".999\"></ConceptNode>"
""
"<PredicateNode name=\"friendOf\"></PredicateNode> "
""
"<VariableNode name=\"X001\"></VariableNode> "
"<VariableNode name=\"X002\"></VariableNode> "
"<VariableNode name=\"X012\"></VariableNode> "
""
""
"<EvaluationLink>"
"    <Element name=\"friendOf\" class=\"PredicateNode\"/>"
"<ListLink>"
"    <Element name=\"X012\" class=\"ConceptNode\" strength = \"0.05\" confidence=\".99\"/>"
"    <Element name=\"Osama\" class=\"ConceptNode\"/>"
"</ListLink>"
"</EvaluationLink>"
""
"</ListLink>";

int ARITY = 11;

char* types_1[] = {
"InheritanceLink",
"ForAllLink",
"ConceptNode",
"EvaluationLink",
"ConceptNode",
"ConceptNode",
"PredicateNode",
"VariableNode",
"VariableNode",
"VariableNode",
"EvaluationLink"
};
    
namespace haxx
{
    extern opencog::pln::iAtomTableWrapper* defaultAtomTableWrapper;
}

class XMLNodeLoaderUTest : public CxxTest::TestSuite{


    public:
    XMLNodeLoaderUTest(){
    }

    void testLoadXMLInput(){
        using namespace opencog::pln;
        DirectATW::getInstance();
        haxx::defaultAtomTableWrapper = &NormalizingATW::getInstance();
        Handle U = LoadXMLInput(haxx::defaultAtomTableWrapper, XML_DATA);
        
        Atom* atom = TLB::getAtom(U);
        Type type = atom->getType();
        printf("Atom type = %s\n", TYPE_TO_STR(type));
        TS_ASSERT(classserver().isAssignableFrom(LINK, type));
        Link* link = (Link*) atom;
        TS_ASSERT(link->getType() == LIST_LINK);
        TS_ASSERT(link->getArity() == ARITY);
        printf("Atom table id = %d\n" + link->getAtomTable());
        Atom* outgoing[ARITY];
        for (int i = 0; i < ARITY; i++) {
            outgoing[i] = link->getOutgoingAtom(i);
            //printf("Outgoing %d type = %s\n", i, TYPE_TO_STR(outgoing[i]->getType()));
            TS_ASSERT(!strcmp(TYPE_TO_STR(outgoing[i]->getType()), types_1[i]));
        }
    }

};
